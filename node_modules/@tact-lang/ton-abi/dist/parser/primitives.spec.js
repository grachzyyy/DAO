"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@ton/core");
const primitives_1 = require("./primitives");
describe('primitives', () => {
    it('should parse integer values', () => {
        for (let i = 1; i < 257; i++) {
            let sc = (0, core_1.beginCell)().storeUint(1, i).endCell().beginParse();
            let type = {
                kind: 'simple',
                type: 'uint',
                format: i
            };
            let ser = (0, primitives_1.getPrimitiveSerializer)(type);
            let v = ser.serializer.load(sc, ser.type);
            if (i <= 32) {
                expect(ser.serializer.tsType).toBe('number');
                expect(v).toBe(1);
            }
            else {
                expect(ser.serializer.tsType).toBe('bigint');
                expect(v).toBe(1n);
            }
            // expect(ser.size.bits).toBe(i);
            // expect(ser.size.refs).toBe(0);
        }
    });
    it('should parse signed integer values', () => {
        for (let i = 1; i < 257; i++) {
            let sc = (0, core_1.beginCell)().storeInt(-1n, i).endCell().beginParse();
            let type = {
                kind: 'simple',
                type: 'int',
                format: i
            };
            let ser = (0, primitives_1.getPrimitiveSerializer)(type);
            let v = ser.serializer.load(sc, ser.type);
            if (i <= 32) {
                expect(ser.serializer.tsType).toBe('number');
                expect(v).toBe(-1);
            }
            else {
                expect(ser.serializer.tsType).toBe('bigint');
                expect(v).toBe(-1n);
            }
            // expect(ser.size.bits).toBe(i);
            // expect(ser.size.refs).toBe(0);
        }
    });
});
