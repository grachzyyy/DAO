"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SouffleEmitter = void 0;
const prettyPrinter_1 = require("./prettyPrinter");
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
/**
 * Emits Souffle entries to a file.
 */
class SouffleEmitter {
    ctx;
    addComments;
    constructor(ctx, addComments) {
        this.ctx = ctx;
        this.addComments = addComments;
    }
    static make(ctx, { addComments = false } = {}) {
        return new SouffleEmitter(ctx, addComments);
    }
    /**
     * Asynchronously emits the Soufflé program to a file within the specified directory.
     * @param dir The directory where the Soufflé fact files should be written.
     */
    async dump(dir) {
        await fs_1.default.promises.writeFile(this.getPath(dir), this.getSourceCode(), "utf8");
    }
    /**
     * Synchronously emits the Soufflé program to a file within the specified directory.
     * @param dir The directory where the Soufflé fact files should be written.
     */
    dumpSync(dir) {
        fs_1.default.writeFileSync(this.getPath(dir), this.getSourceCode(), "utf8");
    }
    getPath(dir) {
        return path_1.default.join(dir, this.ctx.filename);
    }
    getSourceCode() {
        const program = this.ctx.generateProgram();
        const pp = prettyPrinter_1.SoufflePrettyPrinter.make({
            addComments: this.addComments,
        });
        return pp.prettyPrint(program);
    }
}
exports.SouffleEmitter = SouffleEmitter;
