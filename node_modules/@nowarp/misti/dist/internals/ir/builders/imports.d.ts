import { MistiContext } from "../../context";
import { ImportGraph } from "../imports";
export declare class ImportGraphBuilder {
    private readonly ctx;
    private readonly entryPoints;
    private constructor();
    /**
     * Creates an ImportGraphBuilder.
     *
     * @param ctx Misti context.
     * @param entryPoints Absolute paths to entry points to build import graph from.
     */
    static make(ctx: MistiContext, entryPoints: string[]): ImportGraphBuilder;
    build(): ImportGraph;
    private processFile;
    /**
     * Returns the absolute path to the stdlib/libs directory.
     */
    private getStdlibLibsPath;
    /**
     * Returns the absolute path to the stdlib location if the given path
     * starts with `@stdlib`. Otherwise, returns the path unchanged.
     *
     * Tact API doesn't provide functions to work with paths, so we replicate this:
     * https://github.com/tact-lang/tact/blob/2315d035f5f9a22cad42657561c1a0eaef997b05/src/imports/resolveLibrary.ts#L26
     *
     * TODO: Should be replaced when https://github.com/tact-lang/tact/issues/982 is implemented.
     */
    private resolveStdlibPath;
    /**
     * Determines the language of a file based on its extension.
     * @throws ExecutionException if the language cannot be determined.
     */
    private determineLanguage;
    /**
     * Generates a node name for the import graph based on the file path.
     */
    private generateNodeName;
    private hasContract;
}
