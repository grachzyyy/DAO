import { ToolConfig, DetectorConfig } from "../cli";
import { DetectorName } from "../detectors/detector";
import { VirtualFileSystem } from "../vfs/virtualFileSystem";
export type WarningSuppression = {
    detector: DetectorName;
    file: string;
    line: number;
    col: number;
};
/**
 * Represents content of the Misti configuration file (misti.config.json).
 */
export declare class MistiConfig {
    detectors: DetectorConfig[];
    tools: ToolConfig[];
    suppressions: WarningSuppression[];
    ignoredProjects: string[];
    soufflePath: string;
    souffleVerbose?: boolean;
    tactStdlibPath?: string;
    unusedPrefix: string;
    verbosity: "quiet" | "debug" | "default";
    fs: VirtualFileSystem;
    constructor({ configPath, detectors, tools, allDetectors, fs, }?: Partial<{
        configPath?: string;
        detectors?: string[];
        tools?: ToolConfig[];
        allDetectors: boolean;
        fs: VirtualFileSystem;
    }>);
    private createDetectorConfigs;
    /**
     * Parses the suppressions from the configuration file.
     */
    private parseSuppressions;
}
/**
 * Environment variables to configure advanced Misti options.
 */
export declare class MistiEnv {
    /**
     * Timeout for the detector execution in milliseconds.
     */
    static MISTI_TIMEOUT: number;
    /**
     * Whether to trace the execution.
     */
    static MISTI_TRACE: boolean;
}
