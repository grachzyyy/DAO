"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DumpAst = void 0;
const tool_1 = require("./tool");
const util_1 = require("../internals/util");
const json_bigint_1 = __importDefault(require("json-bigint"));
/**
 * A tool that dumps the AST of the given compilation unit.
 */
class DumpAst extends tool_1.Tool {
    get defaultOptions() {
        return {
            format: "json",
            dumpStdlib: false,
        };
    }
    runWithCU(cu) {
        switch (this.options.format) {
            case "json":
                return this.makeOutput(cu, this.dumpJSON(cu));
            default:
                throw (0, util_1.unreachable)(this.options.format);
        }
    }
    dumpJSON(cu) {
        return json_bigint_1.default.stringify(cu.ast.getProgramEntries({ includeStdlib: this.options.dumpStdlib }), null, 2);
    }
    getDescription() {
        return "Dumps the Abstract Syntax Tree (AST)";
    }
    getOptionDescriptions() {
        return {
            format: "The output format for the AST dump: <json>",
            dumpStdlib: "Whether to include standard library definitions in the dump.",
        };
    }
}
exports.DumpAst = DumpAst;
