import { CompilationUnit } from "../../internals/ir";
import { Category, Warning, Severity } from "../../internals/warnings";
import { AstDetector } from "../detector";
/**
 * Detects non-idiomatic statements that can be written using augmented assignment
 * operators like `+=`, `-=`, etc.
 *
 * ## Why is it bad?
 * Using augmented assignment operations improves the readability of the source code
 * and reduces the risk of mistakes, such as those that occur during copy-pasting
 * and refactoring code.
 *
 * ## Example
 * ```tact
 * msgValue = (msgValue - ctx.readForwardFee());
 * ```
 *
 * Use instead:
 * ```tact
 * msgValue -= ctx.readForwardFee());
 * ```
 */
export declare class PreferAugmentedAssign extends AstDetector {
    severity: Severity;
    category: Category;
    check(cu: CompilationUnit): Promise<Warning[]>;
    /**
     * Looks for assignment statements with a binary operation in rhs that could be
     * replaced with the augmented assignment.
     */
    private findAugmentedAssignReplacements;
    private pathsAreEqual;
}
