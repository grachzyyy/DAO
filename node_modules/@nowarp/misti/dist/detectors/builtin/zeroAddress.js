"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZeroAddress = void 0;
const tact_1 = require("../../internals/tact");
const warnings_1 = require("../../internals/warnings");
const detector_1 = require("../detector");
/**
 * A detector that identifies uses of the zero address.
 *
 * ## Why is it bad?
 * Using the zero address in smart contracts is typically problematic because it can be
 * exploited as a default or uninitialized address, leading to unintended transfers and
 * security vulnerabilities. Additionally, operations involving the zero address can
 * result in loss of funds or tokens, as there is no private key to access this address.
 *
 * ## Example
 * ```tact
 * contract Proxy {
 *   to: Address;
 *   init() {
 *     // Warning: Insecure usage of zero address as default value
 *     self.to = newAddress(0, 0);
 *   }
 *   fun setAddress(to: Address) {
 *     self.to = to
 *   }
 * }
 * ```
 *
 * Use instead:
 * ```tact
 * contract Proxy {
 *   to: Address;
 *   init(to: Address) {
 *     // Fixed: Using the input value on initialization.
 *     self.to = to;
 *   }
 *   fun setAddress(to: Address) {
 *     self.to = to
 *   }
 * }
 * ```
 */
class ZeroAddress extends detector_1.AstDetector {
    severity = warnings_1.Severity.LOW;
    category = warnings_1.Category.SECURITY;
    async check(cu) {
        return cu.ast.getProgramEntries().reduce((acc, node) => {
            return acc.concat((0, tact_1.foldExpressions)(node, (acc, expr) => {
                return this.findZeroAddress(acc, expr);
            }, []));
        }, []);
    }
    findZeroAddress(acc, expr) {
        if (expr.kind === "static_call") {
            if (expr.function.text === "newAddress" &&
                expr.args.length === 2 &&
                expr.args[1].kind === "number" &&
                expr.args[1].value === 0n) {
                acc.push(this.makeWarning("Using zero address", expr.args[1].loc, {
                    suggestion: [
                        "Consider changing code to avoid using it.",
                        "For example, you could pass the address during the deployment.",
                    ].join(" "),
                }));
            }
        }
        return acc;
    }
}
exports.ZeroAddress = ZeroAddress;
