"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsmIsUsed = void 0;
const warnings_1 = require("../../internals/warnings");
const detector_1 = require("../detector");
/**
 * An optional detector that highlights all the `asm` functions.
 *
 * ## Why is it bad?
 * Using TVM Assembly is a potentially dangerous operation that requires
 * additional attention from an auditor. This optional detector will highlight
 * all its uses to assist in contract security audits.
 *
 * ## Example
 * ```tact
 * // Highlighted: the asm function use should be audited
 * asm fun getStorageFee(cells: Int, bits: Int, seconds: Int, is_masterchain: Bool): Int { GETSTORAGEFEE }
 * ```
 */
class AsmIsUsed extends detector_1.AstDetector {
    severity = warnings_1.Severity.INFO;
    category = warnings_1.Category.SECURITY;
    async check(cu) {
        return cu.ast.getProgramEntries().reduce((acc, node) => {
            if (node.kind === "asm_function_def") {
                acc.push(this.makeWarning("asm function is used", node.loc, {
                    extraDescription: "Using TVM assembly is a potentially dangerous operation that requires additional review",
                }));
            }
            return acc;
        }, []);
    }
}
exports.AsmIsUsed = AsmIsUsed;
